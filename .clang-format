# Proof clang-format configuration file
# Was tried on Clang 5.0.0
# Still not usable unfortunately
# Doesn't align -> decltype on new lines
# Doesn't allow to have enums with values each on new line
# Doesn't reliably format lambdas. E.g. if mutable or with capture with initializer - brace will be on new line
# Doesn't allow have ctor initializer list always on new line
# Doesn't allow to nest ifdefs
# Doesn't allow to have body of empty classes/structures on same line as name

---
DisableFormat: false
Language: Cpp
Standard: Cpp11
BasedOnStyle: LLVM
AccessModifierOffset: -4
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: Left
AlignOperands: true
AlignTrailingComments: false
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: true
BinPackArguments: true
BinPackParameters: true
BraceWrapping:
    AfterClass: false
    AfterControlStatement: false
    AfterEnum: false
    AfterFunction: true
    AfterNamespace: false
    AfterStruct: false
    AfterUnion: false
    BeforeCatch: false
    BeforeElse: false
    IndentBraces: false
    SplitEmptyFunction: false
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeBraces: Custom
BreakBeforeInheritanceComma: false
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeColon
BreakStringLiterals: true
ColumnLimit: 140
CommentPragmas: "^ *!|^ *:|^ *TODO:"
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: true
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DerivePointerAlignment: false
FixNamespaceComments: true
ForEachMacros: [ foreach, Q_FOREACH, BOOST_FOREACH, forever, Q_FOREVER, QBENCHMARK, QBENCHMARK_ONCE ]
IncludeCategories:
    - Regex: '^<Q.*' # Qt Headers
      Priority: 9
    - Regex: '^("|<)proofcore/' # Proof headers
      Priority: 2
    - Regex: '^("|<)proofutils/' # Proof headers
      Priority: 3
    - Regex: '^("|<)proofgui/' # Proof headers
      Priority: 4
    - Regex: '^("|<)proofnetwork/' # Proof headers
      Priority: 5
    - Regex: '^("|<)proof.*/' # Proof headers
      Priority: 8
    - Regex: '^(<|"gtest).*' # stl/system headers
      Priority: 10
    - Regex: '.*' # everything else
      Priority: 1
IncludeIsMainRegex: '$'
IndentCaseLabels: false
IndentWidth: 4
IndentWrappedFunctionNames: false
KeepEmptyLinesAtTheStartOfBlocks: false
MacroBlockBegin: ''
MacroBlockEnd: ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
PenaltyBreakAssignment: 500
PenaltyBreakBeforeFirstCallParameter: 1000
PenaltyBreakComment: 3000
PenaltyBreakFirstLessLess: 300
PenaltyBreakString: 1000
PenaltyExcessCharacter: 50
PenaltyReturnTypeOnItsOwnLine: 200
PointerAlignment: Right
ReflowComments: true
SortIncludes: true
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true
SpaceBeforeParens: ControlStatements
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
TabWidth: 4
UseTab: Never
